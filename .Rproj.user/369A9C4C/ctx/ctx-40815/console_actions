{
    "type": [
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        2,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.4.2 (2024-10-31) -- \"Pile of Leaves\"\nCopyright (C) 2024 The R Foundation for Statistical Computing\nPlatform: aarch64-apple-darwin20\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite",
        " R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "\nAttaching package: â€˜dplyrâ€™\n\nThe following objects are masked from â€˜package:statsâ€™:\n\n    filter, lag\n\nThe following objects are masked from â€˜package:baseâ€™:\n\n    intersect, setdiff, setequal, union\n\n",
        "> ",
        "library(corrplot)",
        "corrplot 0.95 loaded\n",
        "> ",
        "library(caTools)",
        "> ",
        "library(rpart)",
        "> ",
        "library(rpart.plot)",
        "> ",
        "library(readr)",
        "> ",
        "> ",
        "Bicycle <- read_csv(\"Bike Buyers Assignment 1.csv\")",
        "\rindexing Bike Buyers Assignment 1.csv [========================================] 14.63GB/s, eta:  0s\r                                                                                                    \r\u001B[1mRows: \u001B[22m\u001B[34m1000\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m13\u001B[39m\n\u001B[36mâ”€â”€\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â",
        "”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (8): Marital Status, Gender, Education, Occupation, Home Owner, Commute Distance, Region, Pu...\n\u001B[32mdbl\u001B[39m (5): ID, Income, Children, Cars, Age\n\n\u001B[36mâ„¹\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mâ„¹\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "str(Bicycle)",
        "spc_tbl_ [1,000 Ã— 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID              : num [1:1000] 12496 24107 14177 24381 25597 ...\n $ Marital Status  : chr [1:1000] \"Married\" \"Married\" \"Married\" \"Single\" ...\n $ Gender          : chr [1:1000] \"Female\" \"Male\" \"Male\" NA ...\n $ Income          : num [1:1000] 40000 30000 80000 70000 30000 10000 160000 40000 20000 NA ...\n $ Children        : num [1:1000] 1 3 5 0 0 2 2 1 2 2 ...\n $ Education       : chr [1:1000] \"Bachelors\" \"Partial College\" \"Partial College\" \"Bac",
        "helors\" ...\n $ Occupation      : chr [1:1000] \"Skilled Manual\" \"Clerical\" \"Professional\" \"Professional\" ...\n $ Home Owner      : chr [1:1000] \"Yes\" \"Yes\" \"No\" \"Yes\" ...\n $ Cars            : num [1:1000] 0 1 2 1 0 0 4 0 2 1 ...\n $ Commute Distance: chr [1:1000] \"0-1 Miles\" \"0-1 Miles\" \"2-5 Miles\" \"5-10 Miles\" ...\n $ Region          : chr [1:1000] \"Europe\" \"Europe\" \"Europe\" \"Pacific\" ...\n $ Age             : num [1:1000] 42 43 60 41 36 50 33 43 58 NA ...\n $ Purchased Bike  : chr [1:1000] \"No\" \"No\" \"No\" \"Yes\" ",
        "...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = \u001B[32mcol_double()\u001B[39m,\n  ..   `Marital Status` = \u001B[31mcol_character()\u001B[39m,\n  ..   Gender = \u001B[31mcol_character()\u001B[39m,\n  ..   Income = \u001B[32mcol_double()\u001B[39m,\n  ..   Children = \u001B[32mcol_double()\u001B[39m,\n  ..   Education = \u001B[31mcol_character()\u001B[39m,\n  ..   Occupation = \u001B[31mcol_character()\u001B[39m,\n  ..   `Home Owner` = \u001B[31mcol_character()\u001B[39m,\n  ..   Cars = \u001B[32mcol_double()\u001B[39m,\n  ..   `Commute Distance` = \u001B[31mcol_character()\u001B[39m,\n  ..   Region = \u001B[31mcol_cha",
        "racter()\u001B[39m,\n  ..   Age = \u001B[32mcol_double()\u001B[39m,\n  ..   `Purchased Bike` = \u001B[31mcol_character()\u001B[39m\n  .. )\n - attr(*, \"problems\")=<externalptr> \n",
        "> ",
        "head(Bicycle)",
        "\u001B[38;5;246m# A tibble: 6 Ã— 13\u001B[39m\n     ID `Marital Status` Gender Income Children Education       Occupation     `Home Owner`  Cars\n  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m \u001B[4m1\u001B[24m\u001B[4m2\u001B[24m496 Married      ",
        "    Female  \u001B[4m4\u001B[24m\u001B[4m0\u001B[24m000        1 Bachelors       Skilled Manual Yes              0\n\u001B[38;5;250m2\u001B[39m \u001B[4m2\u001B[24m\u001B[4m4\u001B[24m107 Married          Male    \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000        3 Partial College Clerical       Yes              1\n\u001B[38;5;250m3\u001B[39m \u001B[4m1\u001B[24m\u001B[4m4\u001B[24m177 Married          Male    \u001B[4m8\u001B[24m\u001B[4m0\u001B[24m000        5 Partial College Professional   No               2\n\u001B[38;5;250m4\u001B[39m \u001B[4m2\u001B[24m\u001B[4m4\u001B[24m381 Single           \u001B[31mNA\u001B[39m      \u001B[4m7\u001B[24m\u001B[4m0\u001B[24m000        0 Bachelo",
        "rs       Professional   Yes              1\n\u001B[38;5;250m5\u001B[39m \u001B[4m2\u001B[24m\u001B[4m5\u001B[24m597 Single           Male    \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000        0 Bachelors       Clerical       No               0\n\u001B[38;5;250m6\u001B[39m \u001B[4m1\u001B[24m\u001B[4m3\u001B[24m507 Married          Female  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m000        2 Partial College Manual         Yes              0\n\u001B[38;5;246m# â„¹ 4 more variables: `Commute Distance` <chr>, Region <chr>, Age <dbl>, `Purchased Bike` <chr>\u001B[39m\n",
        "> ",
        "summary(Bicycle)",
        "       ID        Marital Status        Gender              Income          Children   \n Min.   :11000   Length:1000        Length:1000        Min.   : 10000   Min.   :0.00  \n 1st Qu.:15291   Class :character   Class :character   1st Qu.: 30000   1st Qu.:0.00  \n Median :19744   Mode  :character   Mode  :character   Median : 60000   Median :2.00  \n Mean   :19966                                         Mean   : 56268   Mean   :1.91  \n 3rd Qu.:24471                                         3rd Qu.: 70000   3rd Q",
        "u.:3.00  \n Max.   :29447                                         Max.   :170000   Max.   :5.00  \n                                                       NA's   :6        NA's   :8     \n  Education          Occupation         Home Owner             Cars       Commute Distance  \n Length:1000        Length:1000        Length:1000        Min.   :0.000   Length:1000       \n Class :character   Class :character   Class :character   1st Qu.:1.000   Class :character  \n Mode  :character   Mode  :character   Mode  :cha",
        "racter   Median :1.000   Mode  :character  \n                                                          Mean   :1.455                     \n                                                          3rd Qu.:2.000                     \n                                                          Max.   :4.000                     \n                                                          NA's   :9                         \n    Region               Age        Purchased Bike    \n Length:1000        Min.   :25.00   Lengt",
        "h:1000       \n Class :character   1st Qu.:35.00   Class :character  \n Mode  :character   Median :43.00   Mode  :character  \n                    Mean   :44.18                     \n                    3rd Qu.:52.00                     \n                    Max.   :89.00                     \n                    NA's   :8                         \n",
        "> ",
        "> ",
        "# Check for missing values",
        "> ",
        "colSums(is.na(Bicycle))",
        "              ID   Marital Status           Gender           Income         Children \n               0                7               11                6                8 \n       Education       Occupation       Home Owner             Cars Commute Distance \n               0                0                4                9                0 \n          Region              Age   Purchased Bike \n               0                8                0 \n",
        "> ",
        "> ",
        "# Replace missing values in Gender column",
        "> ",
        "Bicycle$Gender[is.na(Bicycle$Gender)] <- \"Unknown\"",
        "> ",
        "> ",
        "# Identify and analyze outliers in Income",
        "> ",
        "Q1 <- quantile(Bicycle$Income, 0.25, na.rm = TRUE)",
        "> ",
        "Q3 <- quantile(Bicycle$Income, 0.75, na.rm = TRUE)",
        "> ",
        "IQR <- Q3 - Q1",
        "> ",
        "lower_bound <- Q1 - 1.5 * IQR",
        "> ",
        "upper_bound <- Q3 + 1.5 * IQR",
        "> ",
        "> ",
        "# Store outliers separately for analysis",
        "> ",
        "outliers <- Bicycle %>% filter(Income < lower_bound | Income > upper_bound)",
        "> ",
        "write.csv(outliers, \"outliers.csv\", row.names = FALSE)",
        "> ",
        "> ",
        "# Remove outliers from dataset",
        "> ",
        "Bicycle <- Bicycle %>% filter(Income >= lower_bound & Income <= upper_bound)",
        "> ",
        "> ",
        "# Histogram of occupation, income",
        "> ",
        "ggplot(data = Bicycle, aes(x = Income)) + ",
        "+ ",
        "  geom_histogram(bins = 40, color = \"black\", fill = \"blue\") +",
        "+ ",
        "  geom_vline(xintercept = mean(Bicycle$Income), linetype=\"dotted\", color = \"red\")",
        "> ",
        "> ",
        "ggplot(data = Bicycle, aes(x = Occupation)) + ",
        "+ ",
        "  geom_bar(color = \"black\", alpha = 0.75, fill='green')",
        "> ",
        "> ",
        "# Summary statistics for Income",
        "> ",
        "summary(Bicycle$Income)",
        "   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10000   30000   60000   55224   70000  130000 \n",
        "> ",
        "var(Bicycle$Income)",
        "[1] 865870613\n",
        "> ",
        "> ",
        "# Distribution of Occupation, income by Purchase.Bike",
        "> ",
        "ggplot(data = Bicycle, aes(x = Income, fill = factor(Purchased.Bike))) + ",
        "+ ",
        "  geom_histogram(bins = 40, color = \"black\") +",
        "+ ",
        "  geom_vline(xintercept = mean(Bicycle$Income), linetype=\"dotted\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_histogram()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Problem while computing aesthetics.\n\u001B[36mâ„¹\u001B[39m Error occurred in the 1st layer.\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Purchased.Bike' not found\n\u001B[90mRun `\u001B]8;;x-r-run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(corrplot)",
        "> ",
        "library(caTools)",
        "> ",
        "library(rpart)",
        "> ",
        "library(rpart.plot)",
        "> ",
        "library(readr)",
        "> ",
        "> ",
        "Bicycle <- read_csv(\"Bike Buyers Assignment 1.csv\")",
        "\rindexing Bike Buyers Assignment 1.csv [========================================] 12.61GB/s, eta:  0s\r                                                                                                    \r\u001B[1mRows: \u001B[22m\u001B[34m1000\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m13\u001B[39m\n\u001B[36mâ”€â”€\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â",
        "”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (8): Marital Status, Gender, Education, Occupation, Home Owner, Commute Distance, Region, Pu...\n\u001B[32mdbl\u001B[39m (5): ID, Income, Children, Cars, Age\n\n\u001B[36mâ„¹\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mâ„¹\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "str(Bicycle)",
        "spc_tbl_ [1,000 Ã— 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID              : num [1:1000] 12496 24107 14177 24381 25597 ...\n $ Marital Status  : chr [1:1000] \"Married\" \"Married\" \"Married\" \"Single\" ...\n $ Gender          : chr [1:1000] \"Female\" \"Male\" \"Male\" NA ...\n $ Income          : num [1:1000] 40000 30000 80000 70000 30000 10000 160000 40000 20000 NA ...\n $ Children        : num [1:1000] 1 3 5 0 0 2 2 1 2 2 ...\n $ Education       : chr [1:1000] \"Bachelors\" \"Partial College\" \"Partial College\" \"Bac",
        "helors\" ...\n $ Occupation      : chr [1:1000] \"Skilled Manual\" \"Clerical\" \"Professional\" \"Professional\" ...\n $ Home Owner      : chr [1:1000] \"Yes\" \"Yes\" \"No\" \"Yes\" ...\n $ Cars            : num [1:1000] 0 1 2 1 0 0 4 0 2 1 ...\n $ Commute Distance: chr [1:1000] \"0-1 Miles\" \"0-1 Miles\" \"2-5 Miles\" \"5-10 Miles\" ...\n $ Region          : chr [1:1000] \"Europe\" \"Europe\" \"Europe\" \"Pacific\" ...\n $ Age             : num [1:1000] 42 43 60 41 36 50 33 43 58 NA ...\n $ Purchased Bike  : chr [1:1000] \"No\" \"No\" \"No\" \"Yes\" ",
        "...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = \u001B[32mcol_double()\u001B[39m,\n  ..   `Marital Status` = \u001B[31mcol_character()\u001B[39m,\n  ..   Gender = \u001B[31mcol_character()\u001B[39m,\n  ..   Income = \u001B[32mcol_double()\u001B[39m,\n  ..   Children = \u001B[32mcol_double()\u001B[39m,\n  ..   Education = \u001B[31mcol_character()\u001B[39m,\n  ..   Occupation = \u001B[31mcol_character()\u001B[39m,\n  ..   `Home Owner` = \u001B[31mcol_character()\u001B[39m,\n  ..   Cars = \u001B[32mcol_double()\u001B[39m,\n  ..   `Commute Distance` = \u001B[31mcol_character()\u001B[39m,\n  ..   Region = \u001B[31mcol_cha",
        "racter()\u001B[39m,\n  ..   Age = \u001B[32mcol_double()\u001B[39m,\n  ..   `Purchased Bike` = \u001B[31mcol_character()\u001B[39m\n  .. )\n - attr(*, \"problems\")=<externalptr> \n",
        "> ",
        "head(Bicycle)",
        "\u001B[38;5;246m# A tibble: 6 Ã— 13\u001B[39m\n     ID `Marital Status` Gender Income Children Education       Occupation     `Home Owner`  Cars\n  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m \u001B[4m1\u001B[24m\u001B[4m2\u001B[24m496 Married      ",
        "    Female  \u001B[4m4\u001B[24m\u001B[4m0\u001B[24m000        1 Bachelors       Skilled Manual Yes              0\n\u001B[38;5;250m2\u001B[39m \u001B[4m2\u001B[24m\u001B[4m4\u001B[24m107 Married          Male    \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000        3 Partial College Clerical       Yes              1\n\u001B[38;5;250m3\u001B[39m \u001B[4m1\u001B[24m\u001B[4m4\u001B[24m177 Married          Male    \u001B[4m8\u001B[24m\u001B[4m0\u001B[24m000        5 Partial College Professional   No               2\n\u001B[38;5;250m4\u001B[39m \u001B[4m2\u001B[24m\u001B[4m4\u001B[24m381 Single           \u001B[31mNA\u001B[39m      \u001B[4m7\u001B[24m\u001B[4m0\u001B[24m000        0 Bachelo",
        "rs       Professional   Yes              1\n\u001B[38;5;250m5\u001B[39m \u001B[4m2\u001B[24m\u001B[4m5\u001B[24m597 Single           Male    \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000        0 Bachelors       Clerical       No               0\n\u001B[38;5;250m6\u001B[39m \u001B[4m1\u001B[24m\u001B[4m3\u001B[24m507 Married          Female  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m000        2 Partial College Manual         Yes              0\n\u001B[38;5;246m# â„¹ 4 more variables: `Commute Distance` <chr>, Region <chr>, Age <dbl>, `Purchased Bike` <chr>\u001B[39m\n",
        "> ",
        "summary(Bicycle)",
        "       ID        Marital Status        Gender              Income          Children   \n Min.   :11000   Length:1000        Length:1000        Min.   : 10000   Min.   :0.00  \n 1st Qu.:15291   Class :character   Class :character   1st Qu.: 30000   1st Qu.:0.00  \n Median :19744   Mode  :character   Mode  :character   Median : 60000   Median :2.00  \n Mean   :19966                                         Mean   : 56268   Mean   :1.91  \n 3rd Qu.:24471                                         3rd Qu.: 70000   3rd Q",
        "u.:3.00  \n Max.   :29447                                         Max.   :170000   Max.   :5.00  \n                                                       NA's   :6        NA's   :8     \n  Education          Occupation         Home Owner             Cars       Commute Distance  \n Length:1000        Length:1000        Length:1000        Min.   :0.000   Length:1000       \n Class :character   Class :character   Class :character   1st Qu.:1.000   Class :character  \n Mode  :character   Mode  :character   Mode  :cha",
        "racter   Median :1.000   Mode  :character  \n                                                          Mean   :1.455                     \n                                                          3rd Qu.:2.000                     \n                                                          Max.   :4.000                     \n                                                          NA's   :9                         \n    Region               Age        Purchased Bike    \n Length:1000        Min.   :25.00   Lengt",
        "h:1000       \n Class :character   1st Qu.:35.00   Class :character  \n Mode  :character   Median :43.00   Mode  :character  \n                    Mean   :44.18                     \n                    3rd Qu.:52.00                     \n                    Max.   :89.00                     \n                    NA's   :8                         \n",
        "> ",
        "> ",
        "# Check for missing values",
        "> ",
        "colSums(is.na(Bicycle))",
        "              ID   Marital Status           Gender           Income         Children \n               0                7               11                6                8 \n       Education       Occupation       Home Owner             Cars Commute Distance \n               0                0                4                9                0 \n          Region              Age   Purchased Bike \n               0                8                0 \n",
        "> ",
        "> ",
        "# Replace missing values in Gender column",
        "> ",
        "Bicycle$Gender[is.na(Bicycle$Gender)] <- \"Unknown\"",
        "> ",
        "> ",
        "# Identify and analyze outliers in Income",
        "> ",
        "Q1 <- quantile(Bicycle$Income, 0.25, na.rm = TRUE)",
        "> ",
        "Q3 <- quantile(Bicycle$Income, 0.75, na.rm = TRUE)",
        "> ",
        "IQR <- Q3 - Q1",
        "> ",
        "lower_bound <- Q1 - 1.5 * IQR",
        "> ",
        "upper_bound <- Q3 + 1.5 * IQR",
        "> ",
        "> ",
        "# Store outliers separately for analysis",
        "> ",
        "outliers <- Bicycle %>% filter(Income < lower_bound | Income > upper_bound)",
        "> ",
        "write.csv(outliers, \"outliers.csv\", row.names = FALSE)",
        "> ",
        "> ",
        "# Remove outliers from dataset",
        "> ",
        "Bicycle <- Bicycle %>% filter(Income >= lower_bound & Income <= upper_bound)",
        "> ",
        "> ",
        "# Histogram of occupation, income",
        "> ",
        "ggplot(data = Bicycle, aes(x = Income)) + ",
        "+ ",
        "  geom_histogram(bins = 40, color = \"black\", fill = \"blue\") +",
        "+ ",
        "  geom_vline(xintercept = mean(Bicycle$Income), linetype=\"dotted\", color = \"red\")",
        "> ",
        "> ",
        "ggplot(data = Bicycle, aes(x = Occupation)) + ",
        "+ ",
        "  geom_bar(color = \"black\", alpha = 0.75, fill='green')",
        "> ",
        "> ",
        "# Summary statistics for Income",
        "> ",
        "summary(Bicycle$Income)",
        "   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  10000   30000   60000   55224   70000  130000 \n",
        "> ",
        "var(Bicycle$Income)",
        "[1] 865870613\n",
        "> ",
        "> ",
        "# Distribution of Occupation, income by Purchase.Bike",
        "> ",
        "ggplot(data = Bicycle, aes(x = Income, fill = factor(Purchased.Bike))) + ",
        "+ ",
        "  geom_histogram(bins = 40, color = \"black\") +",
        "+ ",
        "  geom_vline(xintercept = mean(Bicycle$Income), linetype=\"dotted\")",
        "\u001B[1m\u001B[33mError\u001B[39m in `geom_histogram()`:\u001B[22m\n\u001B[1m\u001B[22m\u001B[33m!\u001B[39m Problem while computing aesthetics.\n\u001B[36mâ„¹\u001B[39m Error occurred in the 1st layer.\n\u001B[1mCaused by error:\u001B[22m\n\u001B[33m!\u001B[39m object 'Purchased.Bike' not found\n\u001B[90mRun `\u001B]8;;x-r-run:rlang::last_trace()\u0007rlang::last_trace()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "Bicycle <- read_csv(\"Bike Buyers Assignment 1.csv\")",
        "\rindexing Bike Buyers Assignment 1.csv [=========================================] 7.31GB/s, eta:  0s\r                                                                                                    \r\u001B[1mRows: \u001B[22m\u001B[34m1000\u001B[39m \u001B[1mColumns: \u001B[22m\u001B[34m13\u001B[39m\n\u001B[36mâ”€â”€\u001B[39m \u001B[1mColumn specification\u001B[22m \u001B[36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â",
        "”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\u001B[39m\n\u001B[1mDelimiter:\u001B[22m \",\"\n\u001B[31mchr\u001B[39m (8): Marital Status, Gender, Education, Occupation, Home Owner, Commute Distance, Region, Pu...\n\u001B[32mdbl\u001B[39m (5): ID, Income, Children, Cars, Age\n\n\u001B[36mâ„¹\u001B[39m Use `spec()` to retrieve the full column specification for this data.\n\u001B[36mâ„¹\u001B[39m Specify the column types or set `show_col_types = FALSE` to quiet this message.\n",
        "> ",
        "str(Bicycle)",
        "spc_tbl_ [1,000 Ã— 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID              : num [1:1000] 12496 24107 14177 24381 25597 ...\n $ Marital Status  : chr [1:1000] \"Married\" \"Married\" \"Married\" \"Single\" ...\n $ Gender          : chr [1:1000] \"Female\" \"Male\" \"Male\" NA ...\n $ Income          : num [1:1000] 40000 30000 80000 70000 30000 10000 160000 40000 20000 NA ...\n $ Children        : num [1:1000] 1 3 5 0 0 2 2 1 2 2 ...\n $ Education       : chr [1:1000] \"Bachelors\" \"Partial College\" \"Partial College\" \"Bac",
        "helors\" ...\n $ Occupation      : chr [1:1000] \"Skilled Manual\" \"Clerical\" \"Professional\" \"Professional\" ...\n $ Home Owner      : chr [1:1000] \"Yes\" \"Yes\" \"No\" \"Yes\" ...\n $ Cars            : num [1:1000] 0 1 2 1 0 0 4 0 2 1 ...\n $ Commute Distance: chr [1:1000] \"0-1 Miles\" \"0-1 Miles\" \"2-5 Miles\" \"5-10 Miles\" ...\n $ Region          : chr [1:1000] \"Europe\" \"Europe\" \"Europe\" \"Pacific\" ...\n $ Age             : num [1:1000] 42 43 60 41 36 50 33 43 58 NA ...\n $ Purchased Bike  : chr [1:1000] \"No\" \"No\" \"No\" \"Yes\" ",
        "...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = \u001B[32mcol_double()\u001B[39m,\n  ..   `Marital Status` = \u001B[31mcol_character()\u001B[39m,\n  ..   Gender = \u001B[31mcol_character()\u001B[39m,\n  ..   Income = \u001B[32mcol_double()\u001B[39m,\n  ..   Children = \u001B[32mcol_double()\u001B[39m,\n  ..   Education = \u001B[31mcol_character()\u001B[39m,\n  ..   Occupation = \u001B[31mcol_character()\u001B[39m,\n  ..   `Home Owner` = \u001B[31mcol_character()\u001B[39m,\n  ..   Cars = \u001B[32mcol_double()\u001B[39m,\n  ..   `Commute Distance` = \u001B[31mcol_character()\u001B[39m,\n  ..   Region = \u001B[31mcol_cha",
        "racter()\u001B[39m,\n  ..   Age = \u001B[32mcol_double()\u001B[39m,\n  ..   `Purchased Bike` = \u001B[31mcol_character()\u001B[39m\n  .. )\n - attr(*, \"problems\")=<externalptr> \n",
        "> ",
        "head(Bicycle)",
        "\u001B[38;5;246m# A tibble: 6 Ã— 13\u001B[39m\n     ID `Marital Status` Gender Income Children Education       Occupation     `Home Owner`  Cars\n  \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m            \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m   \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m    \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m           \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m          \u001B[3m\u001B[38;5;246m<chr>\u001B[39m\u001B[23m        \u001B[3m\u001B[38;5;246m<dbl>\u001B[39m\u001B[23m\n\u001B[38;5;250m1\u001B[39m \u001B[4m1\u001B[24m\u001B[4m2\u001B[24m496 Married      ",
        "    Female  \u001B[4m4\u001B[24m\u001B[4m0\u001B[24m000        1 Bachelors       Skilled Manual Yes              0\n\u001B[38;5;250m2\u001B[39m \u001B[4m2\u001B[24m\u001B[4m4\u001B[24m107 Married          Male    \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000        3 Partial College Clerical       Yes              1\n\u001B[38;5;250m3\u001B[39m \u001B[4m1\u001B[24m\u001B[4m4\u001B[24m177 Married          Male    \u001B[4m8\u001B[24m\u001B[4m0\u001B[24m000        5 Partial College Professional   No               2\n\u001B[38;5;250m4\u001B[39m \u001B[4m2\u001B[24m\u001B[4m4\u001B[24m381 Single           \u001B[31mNA\u001B[39m      \u001B[4m7\u001B[24m\u001B[4m0\u001B[24m000        0 Bachelo",
        "rs       Professional   Yes              1\n\u001B[38;5;250m5\u001B[39m \u001B[4m2\u001B[24m\u001B[4m5\u001B[24m597 Single           Male    \u001B[4m3\u001B[24m\u001B[4m0\u001B[24m000        0 Bachelors       Clerical       No               0\n\u001B[38;5;250m6\u001B[39m \u001B[4m1\u001B[24m\u001B[4m3\u001B[24m507 Married          Female  \u001B[4m1\u001B[24m\u001B[4m0\u001B[24m000        2 Partial College Manual         Yes              0\n\u001B[38;5;246m# â„¹ 4 more variables: `Commute Distance` <chr>, Region <chr>, Age <dbl>, `Purchased Bike` <chr>\u001B[39m\n",
        "> ",
        "---",
        "+ ",
        "title: \"bikebuyer\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "---",
        "+ ",
        "title: \"bikebuyer\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "source(\"~/.active-rstudio-document\", echo=TRUE)",
        "\n> ## ----setup, include=FALSE-------------------------------------------------------------------------\n> knitr::opts_chunk$set(echo = TRUE)\n\n> ## ----cars-----------------------------------------------------------------------------------------\n> summary(cars)\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n> ## ----pressure, ",
        "echo=FALSE-------------------------------------------------------------------------\n> plot(pressure)\n",
        "> ",
        "source(\"~/.active-rstudio-document\", echo=TRUE)",
        "\n> ## ----setup, include=FALSE-------------------------------------------------------------------------\n> knitr::opts_chunk$set(echo = TRUE)\n\n> ## ----cars-----------------------------------------------------------------------------------------\n> summary(cars)\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n> ## ----pressure, ",
        "echo=FALSE-------------------------------------------------------------------------\n> plot(pressure)\n",
        "> ",
        "source(\"~/.active-rstudio-document\", echo=TRUE)",
        "\n> ## ----setup, include=FALSE-------------------------------------------------------------------------\n> knitr::opts_chunk$set(echo = TRUE)\n\n> ## ----cars-----------------------------------------------------------------------------------------\n> summary(cars)\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00  \n\n> ## ----pressure, ",
        "echo=FALSE-------------------------------------------------------------------------\n> plot(pressure)\n",
        "> ",
        "> ",
        "---",
        "+ ",
        "title: \"Assignment1-DAV\"",
        "Error in -title : invalid argument to unary operator\n",
        "> ",
        "# Load required libraries",
        "> ",
        "knitr::opts_chunk$set(echo = TRUE)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(tidyr)",
        "> ",
        "library(ggplot2)",
        "> ",
        "library(corrplot)",
        "> ",
        "library(stringr)",
        "> ",
        "# Replace the file path with the correct path to your CSV",
        "> ",
        "# e.g., \"Bike Buyers Assignment 1.csv\"",
        "> ",
        "data <- read.csv(\"Bike Buyers Assignment 1.csv\", stringsAsFactors = FALSE)",
        "> ",
        "> ",
        "# Structure of the data",
        "> ",
        "str(data)",
        "'data.frame':\t1000 obs. of  13 variables:\n $ ID              : int  12496 24107 14177 24381 25597 13507 27974 19364 22155 19280 ...\n $ Marital.Status  : chr  \"Married\" \"Married\" \"Married\" \"Single\" ...\n $ Gender          : chr  \"Female\" \"Male\" \"Male\" \"\" ...\n $ Income          : int  40000 30000 80000 70000 30000 10000 160000 40000 20000 NA ...\n $ Children        : int  1 3 5 0 0 2 2 1 2 2 ...\n $ Education       : chr  \"Bachelors\" \"Partial College\" \"Partial College\" \"Bachelors\" ...\n $ Occupation      : chr  \"",
        "Skilled Manual\" \"Clerical\" \"Professional\" \"Professional\" ...\n $ Home.Owner      : chr  \"Yes\" \"Yes\" \"No\" \"Yes\" ...\n $ Cars            : int  0 1 2 1 0 0 4 0 2 1 ...\n $ Commute.Distance: chr  \"0-1 Miles\" \"0-1 Miles\" \"2-5 Miles\" \"5-10 Miles\" ...\n $ Region          : chr  \"Europe\" \"Europe\" \"Europe\" \"Pacific\" ...\n $ Age             : int  42 43 60 41 36 50 33 43 58 NA ...\n $ Purchased.Bike  : chr  \"No\" \"No\" \"No\" \"Yes\" ...\n",
        "> ",
        "> ",
        "# Preview the first few rows",
        "> ",
        "head(data)",
        "> ",
        "# Count missing values by column",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "# Numeric columns of interest",
        "> ",
        "numeric_cols <- c(\"Income\", \"Children\", \"Cars\", \"Age\")",
        "> ",
        "> ",
        "# Summary stats",
        "> ",
        "summary(data[numeric_cols])",
        "     Income          Children         Cars            Age       \n Min.   : 10000   Min.   :0.00   Min.   :0.000   Min.   :25.00  \n 1st Qu.: 30000   1st Qu.:0.00   1st Qu.:1.000   1st Qu.:35.00  \n Median : 60000   Median :2.00   Median :1.000   Median :43.00  \n Mean   : 56268   Mean   :1.91   Mean   :1.455   Mean   :44.18  \n 3rd Qu.: 70000   3rd Qu.:3.00   3rd Qu.:2.000   3rd Qu.:52.00  \n Max.   :170000   Max.   :5.00   Max.   :4.000   Max.   :89.00  \n NA's   :6        NA's   :8      NA's   :9       NA's   :",
        "8      \n",
        "> ",
        "> ",
        "# Boxplots for quick outlier detection",
        "> ",
        "par(mfrow=c(2,2))",
        "> ",
        "for(col in numeric_cols){",
        "+ ",
        "  boxplot(data[[col]], main=paste(\"Boxplot of\", col), ylab=col)",
        "+ ",
        "}",
        "> ",
        "par(mfrow=c(1,1))",
        "> ",
        "install.packages(\"pdftools\")",
        "also installing the dependencies â€˜sysâ€™, â€˜askpassâ€™, â€˜curlâ€™, â€˜qpdfâ€™\n\ntrying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/sys_3.4.3.tgz'\nContent type 'application/x-gzip' length 51501 bytes (50 KB)\n==================================================\ndownloaded 50 KB\n\ntrying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/askpass_1.2.1.tgz'\nContent type 'application/x-gzip' length 25153 bytes (24 KB)\n==================================================\ndownl",
        "oaded 24 KB\n\ntrying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/curl_6.2.1.tgz'\nContent type 'application/x-gzip' length 3651306 bytes (3.5 MB)\n==================================================\ndownloaded 3.5 MB\n\ntrying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/qpdf_1.3.4.tgz'\nContent type 'application/x-gzip' length 4760744 bytes (4.5 MB)\n==================================================\ndownloaded 4.5 MB\n\ntrying URL 'https://cran.rstudio.com/bin/macosx/big",
        "-sur-arm64/contrib/4.4/pdftools_3.5.0.tgz'\nContent type 'application/x-gzip' length 7399557 bytes (7.1 MB)\n==================================================\ndownloaded 7.1 MB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/nf/6kc1ds2n4jzc9_qpz6wp9s7h0000gn/T//RtmpgOTZei/downloaded_packages\n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n           No Yes\n            2   5\n  Married 306 229\n  Single  211 247\n",
        "> ",
        "> ",
        "barplot(marital_bike,",
        "+ ",
        "        main = \"Marital Status vs. Purchased Bike\",",
        "+ ",
        "        xlab = \"Purchased Bike (0=No,1=Yes)\",",
        "+ ",
        "        col = c(\"lightblue\",\"pink\"),  # optional color choices",
        "+ ",
        "        legend = rownames(marital_bike),",
        "+ ",
        "        beside = TRUE)",
        "> ",
        "# Convert Home Owner to TRUE / FALSE",
        "> ",
        "data$Home.Owner <- ifelse(tolower(data$Home.Owner) == \"yes\", TRUE, FALSE)",
        "> ",
        "> ",
        "# Convert Purchased Bike to 1 / 0",
        "> ",
        "data$Purchased.Bike <- ifelse(tolower(data$Purchased.Bike) == \"yes\", 1, 0)",
        "> ",
        "> ",
        "# Confirm changes",
        "> ",
        "head(data[, c(\"Home.Owner\",\"Purchased.Bike\")])",
        "> ",
        "# Numeric columns of interest",
        "> ",
        "numeric_cols <- c(\"Income\", \"Children\", \"Cars\", \"Age\")",
        "> ",
        "> ",
        "# Summary stats",
        "> ",
        "summary(data[numeric_cols])",
        "     Income          Children         Cars            Age       \n Min.   : 10000   Min.   :0.00   Min.   :0.000   Min.   :25.00  \n 1st Qu.: 30000   1st Qu.:0.00   1st Qu.:1.000   1st Qu.:35.00  \n Median : 60000   Median :2.00   Median :1.000   Median :43.00  \n Mean   : 56268   Mean   :1.91   Mean   :1.455   Mean   :44.18  \n 3rd Qu.: 70000   3rd Qu.:3.00   3rd Qu.:2.000   3rd Qu.:52.00  \n Max.   :170000   Max.   :5.00   Max.   :4.000   Max.   :89.00  \n NA's   :6        NA's   :8      NA's   :9       NA's   :",
        "8      \n",
        "> ",
        "> ",
        "# Boxplots for quick outlier detection",
        "> ",
        "par(mfrow=c(2,2))",
        "> ",
        "for(col in numeric_cols){",
        "+ ",
        "  boxplot(data[[col]], main=paste(\"Boxplot of\", col), ylab=col)",
        "+ ",
        "}",
        "> ",
        "par(mfrow=c(1,1))",
        "> ",
        "# Convert Home Owner to TRUE / FALSE",
        "> ",
        "data$Home.Owner <- ifelse(tolower(data$Home.Owner) == \"yes\", TRUE, FALSE)",
        "> ",
        "> ",
        "# Convert Purchased Bike to 1 / 0",
        "> ",
        "data$Purchased.Bike <- ifelse(tolower(data$Purchased.Bike) == \"yes\", 1, 0)",
        "> ",
        "> ",
        "# Confirm changes",
        "> ",
        "head(data[, c(\"Home.Owner\",\"Purchased.Bike\")])",
        "> ",
        "hist(data$Age, ",
        "+ ",
        "     main = \"Distribution of Age\", ",
        "+ ",
        "     xlab = \"Age\", ",
        "+ ",
        "     ylab = \"Frequency\")",
        "> ",
        "hist(data$Income,",
        "+ ",
        "     main = \"Distribution of Income\",",
        "+ ",
        "     xlab = \"Income\",",
        "+ ",
        "     ylab = \"Frequency\")",
        "> ",
        "# Count missing values by column",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "data$Gender[is.na(data$Gender)] <- \"Unknown\"",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "data$Gender[is.na(data$Gender)] <- \"0\"",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "data$Gender[is.na(data$Gender)] <- \"0\"",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "data$Gender[is.na(data$Gender)] <- \"N/A\"",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "data$Gender[is.na(data$Gender)] <- \"N/A\"",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "barplot(table(data$Children),",
        "+ ",
        "        main = \"Number of Children\",",
        "+ ",
        "        xlab = \"Children\",",
        "+ ",
        "        ylab = \"Count\")",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "> ",
        "barplot(marital_bike,",
        "+ ",
        "        main = \"Marital Status vs. Purchased Bike\",",
        "+ ",
        "        xlab = \"Purchased Bike (0=No,1=Yes)\",",
        "+ ",
        "        col = c(\"lightblue\",\"pink\"),  # optional color choices",
        "+ ",
        "        legend = rownames(marital_bike),",
        "+ ",
        "        beside = TRUE)",
        "> ",
        "marital_bike <- table( data$Purchased.Bike, data$Marital.Status)",
        "> ",
        "marital_bike",
        "   \n        Married Single\n  0   7     535    458\n",
        "> ",
        "> ",
        "barplot(marital_bike,",
        "+ ",
        "        main = \"Marital Status vs. Purchased Bike\",",
        "+ ",
        "        xlab = \"Purchased Bike (1=yes,0=no)\",",
        "+ ",
        "        col = c(\"lightblue\",\"pink\"),  # optional color choices",
        "+ ",
        "        legend = rownames(marital_bike),",
        "+ ",
        "        beside = TRUE)",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "> ",
        "barplot(marital_bike,",
        "+ ",
        "        main = \"Marital Status vs. Purchased Bike\",",
        "+ ",
        "        xlab = \"Purchased Bike (0=No,1=Yes)\",",
        "+ ",
        "        col = c(\"lightblue\",\"pink\"),  # optional color choices",
        "+ ",
        "        legend = rownames(marital_bike),",
        "+ ",
        "        beside = TRUE)",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "# This typically yields columns in the order: [0, 1]",
        "> ",
        "> ",
        "## 2. Reverse the column order to [1, 0]",
        "> ",
        "# Make sure your table indeed has the columns \"0\" and \"1\":",
        "> ",
        "marital_bike_reversed <- marital_bike[, c(\"1\",\"0\")]",
        "Error in `[.default`(marital_bike, , c(\"1\", \"0\")) : \n  subscript out of bounds\n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "# This typically yields columns in the order: [0, 1]",
        "> ",
        "> ",
        "## 2. Reverse the column order to [1, 0]",
        "> ",
        "# Make sure your table indeed has the columns \"0\" and \"1\":",
        "> ",
        "marital_bike_reversed <- marital_bike[, c(\"Yes\",\"No\")]",
        "Error in `[.default`(marital_bike, , c(\"Yes\", \"No\")) : \n  subscript out of bounds\n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "# This typically yields columns in the order: [0, 1]",
        "> ",
        "> ",
        "## 2. Reverse the column order to [1, 0]",
        "> ",
        "# Make sure your table indeed has the columns \"0\" and \"1\":",
        "> ",
        "marital_bike_reversed <- marital_bike[, c(\"yes\",\"no\")]",
        "Error in `[.default`(marital_bike, , c(\"yes\", \"no\")) : \n  subscript out of bounds\n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "# This typically yields columns in the order: [0, 1]",
        "> ",
        "> ",
        "## 2. Reverse the column order to [1, 0]",
        "> ",
        "# Make sure your table indeed has the columns \"0\" and \"1\":",
        "> ",
        "marital_bike_reversed <- marital_bike[, c(\"yes\",\"no\")]",
        "Error in `[.default`(marital_bike, , c(\"yes\", \"no\")) : \n  subscript out of bounds\n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "# This typically yields columns in the order: [0, 1]",
        "> ",
        "> ",
        "## 2. Reverse the column order to [1, 0]",
        "> ",
        "# Make sure your table indeed has the columns \"0\" and \"1\":",
        "> ",
        "marital_bike_reversed <- marital_bike[, c(\"1\",\"0\")]",
        "Error in `[.default`(marital_bike, , c(\"1\", \"0\")) : \n  subscript out of bounds\n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "> ",
        "barplot(marital_bike,",
        "+ ",
        "        main = \"Marital Status vs. Purchased Bike\",",
        "+ ",
        "        xlab = \"Purchased Bike (0=No,1=Yes)\",",
        "+ ",
        "        col = c(\"lightblue\",\"pink\"),  # optional color choices",
        "+ ",
        "        legend = rownames(marital_bike),",
        "+ ",
        "        beside = TRUE)",
        "> ",
        "data$Gender[is.na(data$Gender)] <- \"Unknown\"",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "# Count missing values by column",
        "> ",
        "colSums(is.na(data))",
        "              ID   Marital.Status           Gender           Income         Children \n               0                0                0                6                8 \n       Education       Occupation       Home.Owner             Cars Commute.Distance \n               0                0                0                9                0 \n          Region              Age   Purchased.Bike \n               0                8                0 \n",
        "> ",
        "marital_bike <- table(data$Marital.Status, data$Purchased.Bike)",
        "> ",
        "marital_bike",
        "         \n            0\n            7\n  Married 535\n  Single  458\n",
        "> ",
        "> ",
        "barplot(marital_bike,",
        "+ ",
        "        main = \"Marital Status vs. Purchased Bike\",",
        "+ ",
        "        xlab = \"Purchased Bike (0=No, 1=Yes)\",",
        "+ ",
        "        col = c(\"lightblue\",\"pink\"),  # optional color choices",
        "+ ",
        "        legend = rownames(marital_bike),",
        "+ ",
        "        beside = TRUE)",
        "> ",
        "# Numeric columns of interest",
        "> ",
        "numeric_cols <- c(\"Income\", \"Children\", \"Cars\", \"Age\")",
        "> ",
        "> ",
        "# Summary stats",
        "> ",
        "summary(data[numeric_cols])",
        "     Income          Children         Cars            Age       \n Min.   : 10000   Min.   :0.00   Min.   :0.000   Min.   :25.00  \n 1st Qu.: 30000   1st Qu.:0.00   1st Qu.:1.000   1st Qu.:35.00  \n Median : 60000   Median :2.00   Median :1.000   Median :43.00  \n Mean   : 56268   Mean   :1.91   Mean   :1.455   Mean   :44.18  \n 3rd Qu.: 70000   3rd Qu.:3.00   3rd Qu.:2.000   3rd Qu.:52.00  \n Max.   :170000   Max.   :5.00   Max.   :4.000   Max.   :89.00  \n NA's   :6        NA's   :8      NA's   :9       NA's   :",
        "8      \n",
        "> ",
        "> ",
        "# Boxplots for quick outlier detection",
        "> ",
        "par(mfrow=c(2,2))",
        "> ",
        "for(col in numeric_cols){",
        "+ ",
        "  boxplot(data[[col]], main=paste(\"Boxplot of\", col), ylab=col)",
        "+ ",
        "}",
        "> ",
        "par(mfrow=c(1,1))",
        "> ",
        "# Replace the file path with the correct path to your CSV",
        "> ",
        "# e.g., \"Bike Buyers Assignment 1.csv\"",
        "> ",
        "data <- read.csv(\"Bike Buyers Assignment 1.csv\", stringsAsFactors = FALSE)",
        "> ",
        "> ",
        "# Structure of the data",
        "> ",
        "str(data)",
        "'data.frame':\t1000 obs. of  13 variables:\n $ ID              : int  12496 24107 14177 24381 25597 13507 27974 19364 22155 19280 ...\n $ Marital.Status  : chr  \"Married\" \"Married\" \"Married\" \"Single\" ...\n $ Gender          : chr  \"Female\" \"Male\" \"Male\" \"\" ...\n $ Income          : int  40000 30000 80000 70000 30000 10000 160000 40000 20000 NA ...\n $ Children        : int  1 3 5 0 0 2 2 1 2 2 ...\n $ Education       : chr  \"Bachelors\" \"Partial College\" \"Partial College\" \"Bachelors\" ...\n $ Occupation      : chr  \"",
        "Skilled Manual\" \"Clerical\" \"Professional\" \"Professional\" ...\n $ Home.Owner      : chr  \"Yes\" \"Yes\" \"No\" \"Yes\" ...\n $ Cars            : int  0 1 2 1 0 0 4 0 2 1 ...\n $ Commute.Distance: chr  \"0-1 Miles\" \"0-1 Miles\" \"2-5 Miles\" \"5-10 Miles\" ...\n $ Region          : chr  \"Europe\" \"Europe\" \"Europe\" \"Pacific\" ...\n $ Age             : int  42 43 60 41 36 50 33 43 58 NA ...\n $ Purchased.Bike  : chr  \"No\" \"No\" \"No\" \"Yes\" ...\n",
        "> ",
        "> ",
        "# Preview the first few rows",
        "> ",
        "head(data)",
        "> ",
        "install.packages(\"latexpdf\")",
        "trying URL 'https://cran.rstudio.com/bin/macosx/big-sur-arm64/contrib/4.4/latexpdf_0.1.8.tgz'\nContent type 'application/x-gzip' length 177194 bytes (173 KB)\n==================================================\ndownloaded 173 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/nf/6kc1ds2n4jzc9_qpz6wp9s7h0000gn/T//RtmpgOTZei/downloaded_packages\n",
        "> ",
        "library(latexpdf)",
        "> ",
        "library(tinytex)",
        "\nRestarting R session...\n\n"
    ]
}