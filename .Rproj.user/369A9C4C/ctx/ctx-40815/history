library(rpart)
model = rpart(formula=Purchased.Bike~.,data=traindata,method='class')
summary(model)
pdf(file='My assignment15.pdf',
width = 4,
height = 4)
library(rpart.plot)
rpart.plot(model)
dev.off()
pred.test=predict(model,newdata = testdata, type='class')
accuracy.test=mean(pred.test==testdata$Purchased.Bike)
accuracy.test
cat('Train Accuracy',accuracy.test)
library(caret)
testdata$Purchased.Bike=as.factor(testdata$Purchased)
confusion = confusionMatrix(pred.test,testdata$Purchased.Bike)
confusion
library(ggplot2)
library(dplyr)
library(corrplot)
library(caTools)
library(rpart)
library(rpart.plot)
Bicycle <- read.csv("Bike Buyers Assignment 1.csv", stringsAsFactors = FALSE)
str(Bicycle)
head(Bicycle)
View(Bicycle)
summary(Bicycle)
# Histogram of occupation, income
ggplot(data = Bicycle, aes(x = Income)) +
geom_histogram(bins = 40, color = "black") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted")
ggplot(data = Bicycle, aes(x = Occupation)) +
geom_bar(color = "black", alpha = 0.75, fill='green')
# Distribution of Occupation, income by Purchase.Bike
ggplot(data = Bicycle, aes(x = Income, fill = Purchased.Bike)) +
geom_histogram(bins = 40, color = "black") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted")
ggplot(data = Bicycle, aes(x = Occupation, fill = Purchased.Bike, group = Purchased.Bike)) +
geom_bar(color = "black", alpha = 0.75) +
geom_text(stat = "count", aes(label = ..count..),
inherit.aes = TRUE, position = position_stack(), vjust = 1.5) +
theme_bw() + labs(title = "Distribution of Occupation by Purchase.Bike")
# Dataset Preparation Income and bike purchase
p1 <- as.data.frame(prop.table(table(Bicycle$Income, Bicycle$Purchased.Bike), margin =1))
names(p1) <- c("Income", "Bought.Bike", "Frequency")
p1 <- p1 %>% filter(Bought.Bike == "Yes")
# Plotting frequency bar plot
ggplot(data = p1, aes(x = Income, y = Frequency, group = 1)) +
geom_point(color = "black") + geom_line() +
scale_x_discrete(breaks = seq(10000, 170000, by = 40000)) +
labs(title = "Percentage of bike buyers in each income category")
# Dataset Preparation for occupation and purchased bike
plot2 <- as.data.frame(prop.table(table(Bicycle$Occupation, Bicycle$Purchased.Bike), 1))
names(plot2) <- c("Occupation", "Purchased.Bike", "Freq")
# Plotting Frequency Bike buyers by Occupation category
ggplot(data = plot2, aes(x = Occupation, y = Freq, fill = Purchased.Bike)) +
geom_bar(color = "black", alpha = 0.75, stat = "identity") +
theme_bw() +
labs(title = "Frequency Bike buyers by Occupation category")
# Dataset Preparation
plot <- as.data.frame(prop.table(table(Bicycle$Education, Bicycle$Purchased.Bike), 1))
names(plot) <- c("Education", "Purchased.Bike", "Freq")
# Plotting
ggplot(data = plot, aes(x = Education, y = Freq, fill = Purchased.Bike)) +
geom_bar(color = "black", alpha = 0.75, stat = "identity") +
labs(title = "Frequency Bike buyers by Education category")
# Plotting Distribution of Occupation by education
ggplot(data = Bicycle, aes(x = Education, fill = Occupation)) +
geom_bar(color = "black", alpha = 0.75, position = "dodge") +
theme_bw() +
labs(title = "Distribution of Occupation by education")
ggplot(data = Bicycle, aes(x = Occupation, y = Income, color = Purchased.Bike)) +
geom_point() + geom_jitter(width = .2)
ggplot(data = Bicycle, aes(x = Occupation, y = Income, color = Purchased.Bike)) +
geom_jitter(width = .2) + facet_wrap(~ Purchased.Bike)
ggplot(data = Bicycle, aes(x = Education, y = Occupation, color = Purchased.Bike)) +
geom_jitter(width = .2) + facet_wrap(~ Purchased.Bike)
ggplot(data = Bicycle, aes(x = Age, fill = Purchased.Bike)) +
geom_histogram(bins = 50, alpha = 0.5, color = "black") +
theme_classic() +
labs(title = "Age histogram")
ggplot(data = Bicycle, aes(x = Age, color = Purchased.Bike, fill = Purchased.Bike)) +
geom_density(alpha = 0.35) +
geom_vline(data = Bicycle %>% group_by(Purchased.Bike) %>% summarise(avg = mean(Age)),
aes(xintercept = avg, color = Purchased.Bike), linetype = "dashed") +
theme_classic() +
labs(title = "Density of age in each category", subtitle = "Average age of each group is represented by vertical lines") +
scale_x_continuous(breaks = seq(from = 25, to = 80, by = 5))
df = Bicycle %>% mutate(Marital.Status = if_else(Marital.Status == "Married", 1, 0),
Home.Owner = if_else(Home.Owner == "Yes", 1, 0),
Purchased.Bike = if_else(Purchased.Bike == "Yes", 1, 0),
Gender = if_else(Gender == "Male", 1, 0),
Education = unclass(Education),
Commute.Distance = unclass(Bicycle$Commute.Distance)) %>%
rename(Married = Marital.Status, Male = Gender)
head(df)
str(df)
df=df[-1]
df
str(df)
cor_bicycle = cor(df[, c(1:4, 7, 8, 11, 12)])
cor_bicycle
corrplot(cor(df[, c(1:4, 7, 8, 11, 12)]), method = "number")
df1 = df[, c(1:4, 7, 8, 11, 12)]
# Training and testing data set
df2 = Bicycle[, c(4, 5, 9, 12, 13)]
View(df2)
set.seed(123)
sample = sample.split(df2, SplitRatio = 0.8)
traindata = subset(df2, sample == T)
str(traindata)
dim(traindata)
head(traindata)
View(traindata)
testdata = subset(df2, sample == F)
str(testdata)
dim(testdata)
head(testdata)
View(testdata)
model = rpart(formula = Purchased.Bike ~ ., data = traindata, method = 'class')
summary(model)
pdf(file = 'DAVassignment1.pdf', width = 4, height = 4)
rpart.plot(model)
dev.off()
pred.test = predict(model, newdata = testdata, type = 'class')
accuracy.test = mean(pred.test == testdata$Purchased.Bike)
accuracy.test
cat('Train Accuracy', accuracy.test)
testdata$Purchased.Bike = as.factor(testdata$Purchased.Bike)
confusion = confusionMatrix(pred.test, testdata$Purchased.Bike)
confusion
library(ggplot2)
library(dplyr)
library(corrplot)
library(caTools)
library(rpart)
library(rpart.plot)
library(readr)
Bicycle <- read_csv("Bike Buyers Assignment 1.csv")
str(Bicycle)
head(Bicycle)
summary(Bicycle)
# Check for missing values
colSums(is.na(Bicycle))
# Replace missing values in Gender column
Bicycle$Gender[is.na(Bicycle$Gender)] <- "Unknown"
# Identify and analyze outliers in Income
Q1 <- quantile(Bicycle$Income, 0.25)
summary(Bicycle)
library(ggplot2)
library(dplyr)
library(corrplot)
library(caTools)
library(rpart)
library(rpart.plot)
library(readr)
Bicycle <- read_csv("Bike Buyers Assignment 1.csv")
str(Bicycle)
head(Bicycle)
summary(Bicycle)
# Check for missing values
colSums(is.na(Bicycle))
# Replace missing values in Gender column
Bicycle$Gender[is.na(Bicycle$Gender)] <- "Unknown"
# Identify and analyze outliers in Income
Q1 <- quantile(Bicycle$Income, 0.25, na.rm = TRUE)
Q3 <- quantile(Bicycle$Income, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Store outliers separately for analysis
outliers <- Bicycle %>% filter(Income < lower_bound | Income > upper_bound)
write.csv(outliers, "outliers.csv", row.names = FALSE)
# Remove outliers from dataset
Bicycle <- Bicycle %>% filter(Income >= lower_bound & Income <= upper_bound)
# Histogram of occupation, income
ggplot(data = Bicycle, aes(x = Income)) +
geom_histogram(bins = 40, color = "black", fill = "blue") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted", color = "red")
ggplot(data = Bicycle, aes(x = Occupation)) +
geom_bar(color = "black", alpha = 0.75, fill='green')
# Summary statistics for Income
summary(Bicycle$Income)
var(Bicycle$Income)
# Distribution of Occupation, income by Purchase.Bike
ggplot(data = Bicycle, aes(x = Income, fill = Purchased.Bike)) +
geom_histogram(bins = 40, color = "black") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted")
library(ggplot2)
library(dplyr)
library(corrplot)
library(caTools)
library(rpart)
library(rpart.plot)
library(readr)
Bicycle <- read_csv("Bike Buyers Assignment 1.csv")
str(Bicycle)
head(Bicycle)
summary(Bicycle)
# Check for missing values
colSums(is.na(Bicycle))
# Replace missing values in Gender column
Bicycle$Gender[is.na(Bicycle$Gender)] <- "Unknown"
# Identify and analyze outliers in Income
Q1 <- quantile(Bicycle$Income, 0.25, na.rm = TRUE)
Q3 <- quantile(Bicycle$Income, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Store outliers separately for analysis
outliers <- Bicycle %>% filter(Income < lower_bound | Income > upper_bound)
write.csv(outliers, "outliers.csv", row.names = FALSE)
# Remove outliers from dataset
Bicycle <- Bicycle %>% filter(Income >= lower_bound & Income <= upper_bound)
# Histogram of occupation, income
ggplot(data = Bicycle, aes(x = Income)) +
geom_histogram(bins = 40, color = "black", fill = "blue") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted", color = "red")
ggplot(data = Bicycle, aes(x = Occupation)) +
geom_bar(color = "black", alpha = 0.75, fill='green')
# Summary statistics for Income
summary(Bicycle$Income)
var(Bicycle$Income)
# Distribution of Occupation, income by Purchase.Bike
ggplot(data = Bicycle, aes(x = Income, fill = factor(Purchased.Bike))) +
geom_histogram(bins = 40, color = "black") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted")
# Compare Age and Gender
ggplot(data = Bicycle, aes(x = Age, fill = Gender)) +
geom_density(alpha = 0.5) +
labs(title = "Age Distribution by Gender")
# Training and testing data set
df2 = Bicycle[, c(4, 5, 9, 12, 13)]
set.seed(123)
sample = sample.split(df2, SplitRatio = 0.8)
traindata = subset(df2, sample == T)
testdata = subset(df2, sample == F)
model = rpart(formula = Purchased.Bike ~ ., data = traindata, method = 'class')
pdf(file = 'DAVassignment1.pdf', width = 4, height = 4)
rpart.plot(model)
dev.off()
pred.test = predict(model, newdata = testdata, type = 'class')
accuracy.test = mean(pred.test == testdata$Purchased.Bike)
cat('Train Accuracy', accuracy.test)
testdata$Purchased.Bike <- factor(testdata$Purchased.Bike)
confusion = confusionMatrix(pred.test, testdata$Purchased.Bike)
library(ggplot2)
library(dplyr)
library(corrplot)
library(caTools)
library(rpart)
library(rpart.plot)
library(readr)
Bicycle <- read_csv("Bike Buyers Assignment 1.csv")
str(Bicycle)
head(Bicycle)
summary(Bicycle)
# Check for missing values
colSums(is.na(Bicycle))
# Replace missing values in Gender column
Bicycle$Gender[is.na(Bicycle$Gender)] <- "Unknown"
# Identify and analyze outliers in Income
Q1 <- quantile(Bicycle$Income, 0.25, na.rm = TRUE)
Q3 <- quantile(Bicycle$Income, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Store outliers separately for analysis
outliers <- Bicycle %>% filter(Income < lower_bound | Income > upper_bound)
write.csv(outliers, "outliers.csv", row.names = FALSE)
# Remove outliers from dataset
Bicycle <- Bicycle %>% filter(Income >= lower_bound & Income <= upper_bound)
# Histogram of occupation, income
ggplot(data = Bicycle, aes(x = Income)) +
geom_histogram(bins = 40, color = "black", fill = "blue") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted", color = "red")
ggplot(data = Bicycle, aes(x = Occupation)) +
geom_bar(color = "black", alpha = 0.75, fill='green')
# Summary statistics for Income
summary(Bicycle$Income)
var(Bicycle$Income)
# Distribution of Occupation, income by Purchase.Bike
ggplot(data = Bicycle, aes(x = Income, fill = factor(Purchased.Bike))) +
geom_histogram(bins = 40, color = "black") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted")
library(ggplot2)
library(dplyr)
library(corrplot)
library(caTools)
library(rpart)
library(rpart.plot)
library(readr)
Bicycle <- read_csv("Bike Buyers Assignment 1.csv")
str(Bicycle)
head(Bicycle)
summary(Bicycle)
# Check for missing values
colSums(is.na(Bicycle))
# Replace missing values in Gender column
Bicycle$Gender[is.na(Bicycle$Gender)] <- "Unknown"
# Identify and analyze outliers in Income
Q1 <- quantile(Bicycle$Income, 0.25, na.rm = TRUE)
Q3 <- quantile(Bicycle$Income, 0.75, na.rm = TRUE)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Store outliers separately for analysis
outliers <- Bicycle %>% filter(Income < lower_bound | Income > upper_bound)
write.csv(outliers, "outliers.csv", row.names = FALSE)
# Remove outliers from dataset
Bicycle <- Bicycle %>% filter(Income >= lower_bound & Income <= upper_bound)
# Histogram of occupation, income
ggplot(data = Bicycle, aes(x = Income)) +
geom_histogram(bins = 40, color = "black", fill = "blue") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted", color = "red")
ggplot(data = Bicycle, aes(x = Occupation)) +
geom_bar(color = "black", alpha = 0.75, fill='green')
# Summary statistics for Income
summary(Bicycle$Income)
var(Bicycle$Income)
# Distribution of Occupation, income by Purchase.Bike
ggplot(data = Bicycle, aes(x = Income, fill = factor(Purchased.Bike))) +
geom_histogram(bins = 40, color = "black") +
geom_vline(xintercept = mean(Bicycle$Income), linetype="dotted")
Bicycle <- read_csv("Bike Buyers Assignment 1.csv")
str(Bicycle)
head(Bicycle)
---
title: "bikebuyer"
---
title: "bikebuyer"
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
---
title: "Assignment1-DAV"
# Load required libraries
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(ggplot2)
library(corrplot)
library(stringr)
# Replace the file path with the correct path to your CSV
# e.g., "Bike Buyers Assignment 1.csv"
data <- read.csv("Bike Buyers Assignment 1.csv", stringsAsFactors = FALSE)
# Structure of the data
str(data)
# Preview the first few rows
head(data)
# Count missing values by column
colSums(is.na(data))
# Numeric columns of interest
numeric_cols <- c("Income", "Children", "Cars", "Age")
# Summary stats
summary(data[numeric_cols])
# Boxplots for quick outlier detection
par(mfrow=c(2,2))
for(col in numeric_cols){
boxplot(data[[col]], main=paste("Boxplot of", col), ylab=col)
}
par(mfrow=c(1,1))
install.packages("pdftools")
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
barplot(marital_bike,
main = "Marital Status vs. Purchased Bike",
xlab = "Purchased Bike (0=No,1=Yes)",
col = c("lightblue","pink"),  # optional color choices
legend = rownames(marital_bike),
beside = TRUE)
# Convert Home Owner to TRUE / FALSE
data$Home.Owner <- ifelse(tolower(data$Home.Owner) == "yes", TRUE, FALSE)
# Convert Purchased Bike to 1 / 0
data$Purchased.Bike <- ifelse(tolower(data$Purchased.Bike) == "yes", 1, 0)
# Confirm changes
head(data[, c("Home.Owner","Purchased.Bike")])
# Numeric columns of interest
numeric_cols <- c("Income", "Children", "Cars", "Age")
# Summary stats
summary(data[numeric_cols])
# Boxplots for quick outlier detection
par(mfrow=c(2,2))
for(col in numeric_cols){
boxplot(data[[col]], main=paste("Boxplot of", col), ylab=col)
}
par(mfrow=c(1,1))
# Convert Home Owner to TRUE / FALSE
data$Home.Owner <- ifelse(tolower(data$Home.Owner) == "yes", TRUE, FALSE)
# Convert Purchased Bike to 1 / 0
data$Purchased.Bike <- ifelse(tolower(data$Purchased.Bike) == "yes", 1, 0)
# Confirm changes
head(data[, c("Home.Owner","Purchased.Bike")])
hist(data$Age,
main = "Distribution of Age",
xlab = "Age",
ylab = "Frequency")
hist(data$Income,
main = "Distribution of Income",
xlab = "Income",
ylab = "Frequency")
# Count missing values by column
colSums(is.na(data))
data$Gender[is.na(data$Gender)] <- "Unknown"
colSums(is.na(data))
data$Gender[is.na(data$Gender)] <- "0"
colSums(is.na(data))
data$Gender[is.na(data$Gender)] <- "0"
colSums(is.na(data))
data$Gender[is.na(data$Gender)] <- "N/A"
colSums(is.na(data))
data$Gender[is.na(data$Gender)] <- "N/A"
colSums(is.na(data))
barplot(table(data$Children),
main = "Number of Children",
xlab = "Children",
ylab = "Count")
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
barplot(marital_bike,
main = "Marital Status vs. Purchased Bike",
xlab = "Purchased Bike (0=No,1=Yes)",
col = c("lightblue","pink"),  # optional color choices
legend = rownames(marital_bike),
beside = TRUE)
marital_bike <- table( data$Purchased.Bike, data$Marital.Status)
marital_bike
barplot(marital_bike,
main = "Marital Status vs. Purchased Bike",
xlab = "Purchased Bike (1=yes,0=no)",
col = c("lightblue","pink"),  # optional color choices
legend = rownames(marital_bike),
beside = TRUE)
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
barplot(marital_bike,
main = "Marital Status vs. Purchased Bike",
xlab = "Purchased Bike (0=No,1=Yes)",
col = c("lightblue","pink"),  # optional color choices
legend = rownames(marital_bike),
beside = TRUE)
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
# This typically yields columns in the order: [0, 1]
## 2. Reverse the column order to [1, 0]
# Make sure your table indeed has the columns "0" and "1":
marital_bike_reversed <- marital_bike[, c("1","0")]
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
# This typically yields columns in the order: [0, 1]
## 2. Reverse the column order to [1, 0]
# Make sure your table indeed has the columns "0" and "1":
marital_bike_reversed <- marital_bike[, c("Yes","No")]
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
# This typically yields columns in the order: [0, 1]
## 2. Reverse the column order to [1, 0]
# Make sure your table indeed has the columns "0" and "1":
marital_bike_reversed <- marital_bike[, c("yes","no")]
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
# This typically yields columns in the order: [0, 1]
## 2. Reverse the column order to [1, 0]
# Make sure your table indeed has the columns "0" and "1":
marital_bike_reversed <- marital_bike[, c("yes","no")]
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
# This typically yields columns in the order: [0, 1]
## 2. Reverse the column order to [1, 0]
# Make sure your table indeed has the columns "0" and "1":
marital_bike_reversed <- marital_bike[, c("1","0")]
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
barplot(marital_bike,
main = "Marital Status vs. Purchased Bike",
xlab = "Purchased Bike (0=No,1=Yes)",
col = c("lightblue","pink"),  # optional color choices
legend = rownames(marital_bike),
beside = TRUE)
data$Gender[is.na(data$Gender)] <- "Unknown"
colSums(is.na(data))
# Count missing values by column
colSums(is.na(data))
marital_bike <- table(data$Marital.Status, data$Purchased.Bike)
marital_bike
barplot(marital_bike,
main = "Marital Status vs. Purchased Bike",
xlab = "Purchased Bike (0=No, 1=Yes)",
col = c("lightblue","pink"),  # optional color choices
legend = rownames(marital_bike),
beside = TRUE)
# Numeric columns of interest
numeric_cols <- c("Income", "Children", "Cars", "Age")
# Summary stats
summary(data[numeric_cols])
# Boxplots for quick outlier detection
par(mfrow=c(2,2))
for(col in numeric_cols){
boxplot(data[[col]], main=paste("Boxplot of", col), ylab=col)
}
par(mfrow=c(1,1))
# Replace the file path with the correct path to your CSV
# e.g., "Bike Buyers Assignment 1.csv"
data <- read.csv("Bike Buyers Assignment 1.csv", stringsAsFactors = FALSE)
# Structure of the data
str(data)
# Preview the first few rows
head(data)
install.packages("latexpdf")
library(latexpdf)
library(tinytex)
